# Generated by Django 4.2.16 on 2024-11-02 18:53

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('homeowner', 'Homeowner'), ('company', 'Company')], max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Arborist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arborist_city', models.CharField(max_length=30)),
                ('arborist_state', models.CharField(max_length=30)),
                ('years_experience', models.CharField(max_length=30)),
                ('price', models.IntegerField(null='True')),
            ],
            options={
                'ordering': ['arborist_city', 'arborist_state', 'years_experience', 'price'],
            },
        ),
        migrations.CreateModel(
            name='ArboristCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=40)),
                ('company_logo', models.ImageField(blank=True, upload_to='company_logo')),
                ('company_city', models.CharField(default='', max_length=70)),
                ('company_state', models.CharField(default='', max_length=40)),
                ('experience', models.CharField(default='', max_length=50)),
                ('company_price', models.IntegerField(null='True')),
                ('arborist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arborist_company', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Homeowner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('street_address', models.CharField(max_length=60)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('zip_code', models.PositiveIntegerField()),
                ('profile_pic', models.ImageField(default='default.jpg', upload_to='profile_pics')),
                ('bio', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['first_name', 'last_name', 'street_address', 'city', 'state', 'zip_code'],
            },
        ),
        migrations.CreateModel(
            name='ServicesType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tree_pruning', models.CharField(max_length=80)),
                ('tree_removal', models.CharField(max_length=80)),
                ('tree_planting', models.CharField(max_length=80)),
                ('pesticide_applications', models.CharField(max_length=80)),
                ('soil_management', models.CharField(max_length=80)),
                ('tree_protection', models.CharField(max_length=80)),
                ('tree_risk_management', models.CharField(max_length=80)),
                ('tree_biology', models.CharField(max_length=80)),
                ('arborist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='arborfindr.arborist')),
            ],
        ),
        migrations.CreateModel(
            name='HomeownerUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.CharField(max_length=100)),
                ('profile_pic', models.ImageField(default='default.jpg', upload_to='profile_pics')),
                ('homeowner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='homeowner_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ArboristReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 Star'), (2, '2 Star'), (3, '3 Star'), (4, '4 Star'), (5, '5 Star')], default=3)),
                ('review_text', models.CharField(max_length=250)),
                ('reviewed_on', models.DateTimeField(auto_now_add=True)),
                ('arborist_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='arborfindr.arboristcompany')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='arborfindr.homeowner')),
            ],
        ),
    ]
